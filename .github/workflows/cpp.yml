# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: C++

on:

  pull_request:
    branches:
    - master
    - 'envoy-release/**'
    - 'istio-release/**'

  push:
    branches:
    - master
    - 'envoy-release/**'
    - 'istio-release/**'

jobs:

  format:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.16'

    - name: Format (clang-format)
      run: |
        sudo apt-get install clang-format-9
        find . -name "*.h" -o -name "*.cc" -o -name "*.proto" | grep -v ".pb." | xargs -n1 clang-format-9 -i
        git diff --exit-code

    - name: Format (buildifier)
      run: |
        go install github.com/bazelbuild/buildtools/buildifier@latest
        export PATH=$PATH:$(go env GOPATH)/bin
        find . -name "BUILD" | xargs -n1 buildifier -mode=check

    - name: Format (addlicense)
      run: |
        go install github.com/google/addlicense@latest
        export PATH=$PATH:$(go env GOPATH)/bin
        addlicense -check .

  build:
    name: build (${{ matrix.name }})

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
        - name: 'V8 on Linux'
          runtime: 'v8'
          os: ubuntu-20.04
        - name: 'V8 on macOS'
          runtime: 'v8'
          os: macos-11
        - name: 'WAMR on Linux'
          runtime: 'wamr'
          os: ubuntu-20.04
        - name: 'WAMR on macOS'
          runtime: 'wamr'
          os: macos-11
        - name: 'Wasmtime on Linux'
          runtime: 'wasmtime'
          os: ubuntu-20.04
        - name: 'Wasmtime on macOS'
          runtime: 'wasmtime'
          os: macos-11
        - name: 'WAVM on Linux'
          runtime: 'wavm'
          os: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: Install dependency (Linux)
      if: startsWith(matrix.os, 'ubuntu')
      run: sudo apt-get install ninja-build

    - name: Install dependency (macOS)
      if: startsWith(matrix.os, 'macos')
      run: brew install ninja

    - name: Mount Bazel cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/bazel
          ~/.cache/bazelisk
        key: bazel-${{ matrix.os }}-${{ matrix.runtime }}-${{ hashFiles('WORKSPACE', '.bazelrc', '.bazelversion', 'bazel/cargo/Cargo.raze.lock', 'bazel/dependencies.bzl', 'bazel/repositories.bzl') }}

    - name: Test
      run: |
        bazel test --test_output=errors --define runtime=${{ matrix.runtime }} //test/...

    - name: Test (signed Wasm module)
      run: |
        bazel test --test_output=errors --define runtime=${{ matrix.runtime }} --per_file_copt=src/signature_util.cc,test/signature_util_test.cc@-DPROXY_WASM_VERIFY_WITH_ED25519_PUBKEY=\"$(xxd -p -c 256 test/test_data/signature_key1.pub | cut -b9-)\" //test:signature_util_test
