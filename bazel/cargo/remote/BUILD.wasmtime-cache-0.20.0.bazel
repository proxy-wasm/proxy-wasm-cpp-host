"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load(
    "@io_bazel_rules_rust//rust:rust.bzl",
    "rust_binary",
    "rust_library",
    "rust_test",
)

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//bazel/cargo", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "notice",  # Apache-2.0 from expression "Apache-2.0"
])

# Generated Targets

# Unsupported target "build-script-build" with type "custom-build" omitted

rust_library(
    name = "wasmtime_cache",
    srcs = glob(["**/*.rs"]),
    aliases = {
    },
    crate_features = [
    ],
    crate_root = "crates/cache/src/lib.rs",
    crate_type = "lib",
    edition = "2018",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "0.20.0",
    # buildifier: leave-alone
    deps = [
        "@raze__anyhow__1_0_33//:anyhow",
        "@raze__base64__0_12_3//:base64",
        "@raze__bincode__1_3_1//:bincode",
        "@raze__directories__2_0_2//:directories",
        "@raze__file_per_thread_logger__0_1_4//:file_per_thread_logger",
        "@raze__log__0_4_11//:log",
        "@raze__serde__1_0_117//:serde",
        "@raze__sha2__0_8_2//:sha2",
        "@raze__toml__0_5_7//:toml",
        "@raze__zstd__0_5_3_zstd_1_4_5//:zstd",
    ] + selects.with_or({
        # cfg(not(target_os = "windows"))
        (
            "@io_bazel_rules_rust//rust/platform:aarch64-apple-ios",
            "@io_bazel_rules_rust//rust/platform:aarch64-linux-android",
            "@io_bazel_rules_rust//rust/platform:aarch64-unknown-linux-gnu",
            "@io_bazel_rules_rust//rust/platform:arm-unknown-linux-gnueabi",
            "@io_bazel_rules_rust//rust/platform:i686-apple-darwin",
            "@io_bazel_rules_rust//rust/platform:i686-linux-android",
            "@io_bazel_rules_rust//rust/platform:i686-unknown-freebsd",
            "@io_bazel_rules_rust//rust/platform:i686-unknown-linux-gnu",
            "@io_bazel_rules_rust//rust/platform:powerpc-unknown-linux-gnu",
            "@io_bazel_rules_rust//rust/platform:s390x-unknown-linux-gnu",
            "@io_bazel_rules_rust//rust/platform:wasm32-unknown-unknown",
            "@io_bazel_rules_rust//rust/platform:x86_64-apple-darwin",
            "@io_bazel_rules_rust//rust/platform:x86_64-apple-ios",
            "@io_bazel_rules_rust//rust/platform:x86_64-linux-android",
            "@io_bazel_rules_rust//rust/platform:x86_64-unknown-freebsd",
            "@io_bazel_rules_rust//rust/platform:x86_64-unknown-linux-gnu",
        ): [
            "@raze__errno__0_2_7//:errno",
            "@raze__libc__0_2_80//:libc",
        ],
        "//conditions:default": [],
    }) + selects.with_or({
        # cfg(target_os = "windows")
        (
            "@io_bazel_rules_rust//rust/platform:i686-pc-windows-msvc",
            "@io_bazel_rules_rust//rust/platform:x86_64-pc-windows-msvc",
        ): [
            "@raze__winapi__0_3_9//:winapi",
        ],
        "//conditions:default": [],
    }),
)

# Unsupported target "cache_write_default_config" with type "test" omitted
