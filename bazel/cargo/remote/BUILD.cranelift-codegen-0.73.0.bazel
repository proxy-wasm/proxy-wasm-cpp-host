"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

# buildifier: disable=load
load(
    "@rules_rust//rust:rust.bzl",
    "rust_binary",
    "rust_library",
    "rust_test",
)

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//bazel/cargo", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "notice",  # Apache-2.0 from expression "Apache-2.0"
])

# Generated Targets
# buildifier: disable=out-of-order-load
# buildifier: disable=load-on-top
load(
    "@rules_rust//cargo:cargo_build_script.bzl",
    "cargo_build_script",
)

cargo_build_script(
    name = "cranelift_codegen_build_script",
    srcs = glob(["**/*.rs"]),
    build_script_env = {
    },
    crate_features = [
        "default",
        "enable-serde",
        "gimli",
        "serde",
        "std",
        "unwind",
    ],
    crate_root = "build.rs",
    data = glob(["**"]),
    edition = "2018",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "0.73.0",
    visibility = ["//visibility:private"],
    deps = [
        "@proxy_wasm_cpp_host__cranelift_codegen_meta__0_73_0//:cranelift_codegen_meta",
    ],
)

rust_library(
    name = "cranelift_codegen",
    srcs = glob(["**/*.rs"]),
    crate_features = [
        "default",
        "enable-serde",
        "gimli",
        "serde",
        "std",
        "unwind",
    ],
    crate_root = "src/lib.rs",
    crate_type = "lib",
    data = [],
    edition = "2018",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "0.73.0",
    # buildifier: leave-alone
    deps = [
        ":cranelift_codegen_build_script",
        "@proxy_wasm_cpp_host__byteorder__1_4_3//:byteorder",
        "@proxy_wasm_cpp_host__cranelift_bforest__0_73_0//:cranelift_bforest",
        "@proxy_wasm_cpp_host__cranelift_codegen_shared__0_73_0//:cranelift_codegen_shared",
        "@proxy_wasm_cpp_host__cranelift_entity__0_73_0//:cranelift_entity",
        "@proxy_wasm_cpp_host__gimli__0_23_0//:gimli",
        "@proxy_wasm_cpp_host__log__0_4_14//:log",
        "@proxy_wasm_cpp_host__regalloc__0_0_31//:regalloc",
        "@proxy_wasm_cpp_host__serde__1_0_126//:serde",
        "@proxy_wasm_cpp_host__smallvec__1_6_1//:smallvec",
        "@proxy_wasm_cpp_host__target_lexicon__0_12_0//:target_lexicon",
        "@proxy_wasm_cpp_host__thiserror__1_0_24//:thiserror",
    ],
)
