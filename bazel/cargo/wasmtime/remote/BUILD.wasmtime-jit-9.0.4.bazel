"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

# buildifier: disable=load
load(
    "@rules_rust//rust:defs.bzl",
    "rust_binary",
    "rust_library",
    "rust_proc_macro",
    "rust_test",
)

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//bazel/cargo/wasmtime", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "notice",  # Apache-2.0 from expression "Apache-2.0"
])

# Generated Targets

rust_library(
    name = "wasmtime_jit",
    srcs = glob(["**/*.rs"]),
    aliases = {
    },
    crate_features = [
        "ittapi",
        "jitdump",
        "vtune",
        "wasmtime-jit-debug",
    ],
    crate_root = "src/lib.rs",
    data = [],
    edition = "2021",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "crate-name=wasmtime-jit",
        "manual",
    ],
    version = "9.0.4",
    # buildifier: leave-alone
    deps = [
        "@wasmtime__addr2line__0_19_0//:addr2line",
        "@wasmtime__anyhow__1_0_75//:anyhow",
        "@wasmtime__bincode__1_3_3//:bincode",
        "@wasmtime__cfg_if__1_0_0//:cfg_if",
        "@wasmtime__cpp_demangle__0_3_5//:cpp_demangle",
        "@wasmtime__gimli__0_27_3//:gimli",
        "@wasmtime__log__0_4_20//:log",
        "@wasmtime__object__0_30_4//:object",
        "@wasmtime__rustc_demangle__0_1_23//:rustc_demangle",
        "@wasmtime__serde__1_0_188//:serde",
        "@wasmtime__target_lexicon__0_12_11//:target_lexicon",
        "@wasmtime__wasmtime_environ__9_0_4//:wasmtime_environ",
        "@wasmtime__wasmtime_jit_debug__9_0_4//:wasmtime_jit_debug",
        "@wasmtime__wasmtime_jit_icache_coherence__9_0_4//:wasmtime_jit_icache_coherence",
        "@wasmtime__wasmtime_runtime__9_0_4//:wasmtime_runtime",
    ] + selects.with_or({
        # cfg(target_arch = "x86_64")
        (
            "@rules_rust//rust/platform:x86_64-apple-darwin",
            "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
            "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
            "@rules_rust//rust/platform:x86_64-apple-ios",
            "@rules_rust//rust/platform:x86_64-linux-android",
            "@rules_rust//rust/platform:x86_64-unknown-freebsd",
        ): [
            "@wasmtime__ittapi__0_3_4//:ittapi",
        ],
        "//conditions:default": [],
    }) + selects.with_or({
        # cfg(target_os = "windows")
        (
            "@rules_rust//rust/platform:i686-pc-windows-msvc",
            "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
        ): [
            "@wasmtime__windows_sys__0_48_0//:windows_sys",
        ],
        "//conditions:default": [],
    }),
)
