From bc2a85e39fd55879b9baed51429c08b27d5514c8 Mon Sep 17 00:00:00 2001
From: Matt Leon <mattleon@google.com>
Date: Wed, 16 Jul 2025 16:55:02 -0400
Subject: [PATCH 1/6] Disable pointer compression

Pointer compression limits the maximum number of WasmVMs.

Signed-off-by: Matt Leon <mattleon@google.com>
---
 BUILD.bazel | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/BUILD.bazel b/BUILD.bazel
index 3f5a87d054e..0a693b7ee10 100644
--- a/BUILD.bazel
+++ b/BUILD.bazel
@@ -292,7 +292,7 @@ v8_int(
 # If no explicit value for v8_enable_pointer_compression, we set it to 'none'.
 v8_string(
     name = "v8_enable_pointer_compression",
-    default = "none",
+    default = "False",
 )
 
 # Default setting for v8_enable_pointer_compression.
-- 
2.50.0.727.gbf7dc18ff4-goog


From 61898e9a63ac89a37261c081b84714cfc400a4b1 Mon Sep 17 00:00:00 2001
From: Matt Leon <mattleon@google.com>
Date: Wed, 16 Jul 2025 16:56:31 -0400
Subject: [PATCH 2/6] Restore _allowlist_function_transition

Reverts v8 commit b26554ec368e9553782012c96aa5e99b163eaff2, which removed use of
_allowlist_function_transition from v8 bazel/defs.bzl, since it is still required
by the version of Bazel we currently use (6.5.0).

Signed-off-by: Matt Leon <mattleon@google.com>
---
 bazel/defs.bzl                       |  3 +++
 bazel/v8-non-pointer-compression.bzl | 11 +++++++++++
 2 files changed, 14 insertions(+)

diff --git a/bazel/defs.bzl b/bazel/defs.bzl
index 0539ea176ac..14d7ace5e59 100644
--- a/bazel/defs.bzl
+++ b/bazel/defs.bzl
@@ -485,6 +485,9 @@ _v8_mksnapshot = rule(
             cfg = "exec",
         ),
         "target_os": attr.string(mandatory = True),
+        "_allowlist_function_transition": attr.label(
+            default = "@bazel_tools//tools/allowlists/function_transition_allowlist",
+        ),
         "prefix": attr.string(mandatory = True),
         "suffix": attr.string(mandatory = True),
     },
diff --git a/bazel/v8-non-pointer-compression.bzl b/bazel/v8-non-pointer-compression.bzl
index 8c929454840..57336154cf7 100644
--- a/bazel/v8-non-pointer-compression.bzl
+++ b/bazel/v8-non-pointer-compression.bzl
@@ -47,6 +47,17 @@ v8_binary_non_pointer_compression = rule(
         # Note specificaly how it's configured with v8_target_cpu_transition, which
         # ensures that setting propagates down the graph.
         "binary": attr.label(cfg = v8_disable_pointer_compression),
+        # This is a stock Bazel requirement for any rule that uses Starlark
+        # transitions. It's okay to copy the below verbatim for all such rules.
+        #
+        # The purpose of this requirement is to give the ability to restrict
+        # which packages can invoke these rules, since Starlark transitions
+        # make much larger graphs possible that can have memory and performance
+        # consequences for your build. The whitelist defaults to "everything".
+        # But you can redefine it more strictly if you feel that's prudent.
+        "_allowlist_function_transition": attr.label(
+            default = "@bazel_tools//tools/allowlists/function_transition_allowlist",
+        ),
     },
     # Making this executable means it works with "$ bazel run".
     executable = True,
-- 
2.50.0.727.gbf7dc18ff4-goog


From 4a6e7158fd4ca48c75c8e33ea15760c9beea1d2f Mon Sep 17 00:00:00 2001
From: Matt Leon <mattleon@google.com>
Date: Wed, 16 Jul 2025 16:56:52 -0400
Subject: [PATCH 3/6] Don't expose Wasm C API (only Wasm C++ API).

Signed-off-by: Matt Leon <mattleon@google.com>
---
 src/wasm/c-api.cc | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/src/wasm/c-api.cc b/src/wasm/c-api.cc
index 05e4029f183..d705be96a16 100644
--- a/src/wasm/c-api.cc
+++ b/src/wasm/c-api.cc
@@ -2472,6 +2472,8 @@ WASM_EXPORT auto Instance::exports() const -> ownvec<Extern> {
 
 }  // namespace wasm
 
+#if 0
+
 // BEGIN FILE wasm-c.cc
 
 extern "C" {
@@ -3518,3 +3520,5 @@ wasm_instance_t* wasm_frame_instance(const wasm_frame_t* frame) {
 #undef WASM_DEFINE_SHARABLE_REF
 
 }  // extern "C"
+
+#endif
-- 
2.50.0.727.gbf7dc18ff4-goog


From 7b593eb8086dcfe9012d4fa694d622f21dadb731 Mon Sep 17 00:00:00 2001
From: Matt Leon <mattleon@google.com>
Date: Wed, 16 Jul 2025 16:58:02 -0400
Subject: [PATCH 4/6] Stub out fast_float for bazel-supplied version

Signed-off-by: Matt Leon <mattleon@google.com>
---
 BUILD.bazel | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/BUILD.bazel b/BUILD.bazel
index 0a693b7ee10..eafd9dad20c 100644
--- a/BUILD.bazel
+++ b/BUILD.bazel
@@ -4438,7 +4438,7 @@ v8_library(
     ],
     deps = [
         ":lib_dragonbox",
-        "//third_party/fast_float/src:fast_float",
+        "@fast_float//:fast_float",
         ":lib_fp16",
         ":simdutf",
         ":v8_libbase",
-- 
2.50.0.727.gbf7dc18ff4-goog


From b442d34b12dd513946f509d9db86839ce8aa4d7f Mon Sep 17 00:00:00 2001
From: Matt Leon <mattleon@google.com>
Date: Wed, 16 Jul 2025 20:04:05 -0400
Subject: [PATCH 5/6] Stub out vendored dependencies for bazel-sourced versions

Signed-off-by: Matt Leon <mattleon@google.com>
---
 BUILD.bazel | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/BUILD.bazel b/BUILD.bazel
index eafd9dad20c..ce36666e36e 100644
--- a/BUILD.bazel
+++ b/BUILD.bazel
@@ -4437,10 +4437,10 @@ v8_library(
         ":noicu/generated_torque_definitions",
     ],
     deps = [
-        ":lib_dragonbox",
+        "@dragonbox//:dragonbox",
         "@fast_float//:fast_float",
-        ":lib_fp16",
-        ":simdutf",
+        "@fp16//:FP16",
+        "@simdutf//:simdutf",
         ":v8_libbase",
         "@abseil-cpp//absl/container:btree",
         "@abseil-cpp//absl/container:flat_hash_map",
-- 
2.50.0.727.gbf7dc18ff4-goog


From e0b8f32cc057a3c0875437d5d54d012cabcab458 Mon Sep 17 00:00:00 2001
From: Matt Leon <mattleon@google.com>
Date: Wed, 16 Jul 2025 20:29:10 -0400
Subject: [PATCH 6/6] Add build flags to make V8 compile with GCC

Signed-off-by: Matt Leon <mattleon@google.com>
---
 bazel/defs.bzl | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/bazel/defs.bzl b/bazel/defs.bzl
index 14d7ace5e59..c7a48d4e805 100644
--- a/bazel/defs.bzl
+++ b/bazel/defs.bzl
@@ -117,6 +117,9 @@ def _default_args():
                 "-Wno-implicit-int-float-conversion",
                 "-Wno-deprecated-copy",
                 "-Wno-non-virtual-dtor",
+                "-Wno-invalid-offsetof",
+                "-Wno-dangling-pointer",
+                "-Wno-dangling-reference",
                 "-isystem .",
             ],
             "//conditions:default": [],
-- 
2.50.0.727.gbf7dc18ff4-goog

