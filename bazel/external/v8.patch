# 1. Disable pointer compression (limits the maximum number of WasmVMs).
# 2. Don't expose Wasm C API (only Wasm C++ API).
# 3. Revert v8 commit b26554ec368e9553782012c96aa5e99b163eaff2, which removed
#    use of _allowlist_function_transition from v8 bazel/defs.bzl, since it is
#    still required by the version of Bazel we currently use (6.5.0).

diff --git a/BUILD.bazel b/BUILD.bazel
index 3f5a87d054e..0a693b7ee10 100644
--- a/BUILD.bazel
+++ b/BUILD.bazel
@@ -292,7 +292,7 @@ v8_int(
 # If no explicit value for v8_enable_pointer_compression, we set it to 'none'.
 v8_string(
     name = "v8_enable_pointer_compression",
-    default = "none",
+    default = "False",
 )
 
 # Default setting for v8_enable_pointer_compression.
diff --git a/bazel/defs.bzl b/bazel/defs.bzl
index 0539ea176ac..14d7ace5e59 100644
--- a/bazel/defs.bzl
+++ b/bazel/defs.bzl
@@ -485,6 +485,9 @@ _v8_mksnapshot = rule(
             cfg = "exec",
         ),
         "target_os": attr.string(mandatory = True),
+        "_allowlist_function_transition": attr.label(
+            default = "@bazel_tools//tools/allowlists/function_transition_allowlist",
+        ),
         "prefix": attr.string(mandatory = True),
         "suffix": attr.string(mandatory = True),
     },
diff --git a/bazel/v8-non-pointer-compression.bzl b/bazel/v8-non-pointer-compression.bzl
index 8c929454840..57336154cf7 100644
--- a/bazel/v8-non-pointer-compression.bzl
+++ b/bazel/v8-non-pointer-compression.bzl
@@ -47,6 +47,17 @@ v8_binary_non_pointer_compression = rule(
         # Note specificaly how it's configured with v8_target_cpu_transition, which
         # ensures that setting propagates down the graph.
         "binary": attr.label(cfg = v8_disable_pointer_compression),
+        # This is a stock Bazel requirement for any rule that uses Starlark
+        # transitions. It's okay to copy the below verbatim for all such rules.
+        #
+        # The purpose of this requirement is to give the ability to restrict
+        # which packages can invoke these rules, since Starlark transitions
+        # make much larger graphs possible that can have memory and performance
+        # consequences for your build. The whitelist defaults to "everything".
+        # But you can redefine it more strictly if you feel that's prudent.
+        "_allowlist_function_transition": attr.label(
+            default = "@bazel_tools//tools/allowlists/function_transition_allowlist",
+        ),
     },
     # Making this executable means it works with "$ bazel run".
     executable = True,
diff --git a/src/wasm/c-api.cc b/src/wasm/c-api.cc
index 05e4029f183..d705be96a16 100644
--- a/src/wasm/c-api.cc
+++ b/src/wasm/c-api.cc
@@ -2472,6 +2472,8 @@ WASM_EXPORT auto Instance::exports() const -> ownvec<Extern> {
 
 }  // namespace wasm
 
+#if 0
+
 // BEGIN FILE wasm-c.cc
 
 extern "C" {
@@ -3518,3 +3520,5 @@ wasm_instance_t* wasm_frame_instance(const wasm_frame_t* frame) {
 #undef WASM_DEFINE_SHARABLE_REF
 
 }  // extern "C"
+
+#endif
